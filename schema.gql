# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

"""customers"""
type Customers {
  """ID"""
  id: ID!
  first_name: String!
  last_name: String!
  email: String
  address: String
  phone: String
  birthday: String
  gender: CustomerGenders
  created_at: Date!
  updated_at: Date!
}

enum CustomerGenders {
  MALE
  FEMALE
  UNKNOWN
}

"""paginated customers result"""
type PaginatedCustomers {
  data: [Customers]!
  total: Int!
}

type Products {
  id: ID!
  name: String!
  price: Float!
  currency: ProductsCurrency!
  brand: String
  stock: Float
  created_at: Date!
  updated_at: Date!
}

enum ProductsCurrency {
  USD
  EUR
  VND
  CNY
  JPY
  KRW
}

type PaginatedProducts {
  items: [Products]!
  total: Int!
  page: Int!
  limit: Int!
}

"""users"""
type Users {
  """ID"""
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  address: String
  phone: String
  birthday: String
  role: USER_ROLES!
  picture: String
  created_at: Date!
  updated_at: Date!
}

enum USER_ROLES {
  SUPER_ADMIN
  ADMIN
  NORMAL_USER
}

type LoginResult {
  """JWT TOKEN from Auth0"""
  access_token: String!

  """REFRESH TOKEN from Auth0"""
  refresh_token: String!
  expires_in: Int!
  token_type: String!
}

type PaginatedUsers {
  items: [Users]!
  total: Int!
  page: Int!
  limit: Int!
}

type NotificationAppUsersSettings {
  """AppUsers Setting ID"""
  _id: ID!

  """User ID"""
  user_id: String!

  """User Email"""
  user_email: String!

  """User Phone"""
  user_phone: String

  """User Telegram ID"""
  user_telegram_id: String

  """AppUsers Event Types"""
  event_types: [AppUsersNotificationSettingsEvents!]!

  """In App Notification"""
  in_app_notification: Boolean!

  """Email Notification"""
  email_notification: Boolean!

  """Telegram Notification"""
  telegram_notification: Boolean!

  """Created At - Unix Timestamp"""
  created_at: Float!

  """Updated At - Unix Timestamp"""
  updated_at: Float!
}

enum AppUsersNotificationSettingsEvents {
  BMI_NOTIFICATION
  BMR_NOTIFICATION
  BODY_STATS_NOTIFICATION
  TDEE_NOTIFICATION
}

type Bmi {
  """BMI ID"""
  id: ID!
  height: Float!
  weight: Float!
  bmi_value: Float!
  bmi_category: BMI_CATEGORY!
  owner_id: ID!
  owner: Users
  created_at: Date!
  updated_at: Date!
}

"""BMI Category"""
enum BMI_CATEGORY {
  UNDERWEIGHT
  NORMAL
  OVERWEIGHT
  OBESE
  OBESE_II
  OBESE_III
}

type PaginatedBmi {
  items: [Bmi]!
  total: Int!
  page: Int!
  limit: Int!
}

type BmiChartData {
  """Date in YYYY-MM-DD format"""
  date: String!
  bmi_value: Float!
  bmi_category: BMI_CATEGORY
}

"""Date custom scalar type"""
scalar Date

type Query {
  viewCustomerDetail(id: String!): Customers!
  paginateCustomers(id: String, page: Int = 1, limit: Int = 10, order_by: String = "created_at", order: Oder = DESC, email: String, name: String, phone: String, search: String): PaginatedCustomers!
  paginateProducts(id: ID, page: Int = 1, limit: Int = 10, order_by: String = "created_at", order: Oder = DESC, name: String, price: Float, currency: ProductsCurrency, brand: String, from: String, to: String): PaginatedProducts!
  me: Users!
  getUserById(id: ID!): Users!
  paginateUsers(id: String, page: Int = 1, limit: Int = 10, order_by: String = "created_at", order: Oder = DESC, name: String, email: String, phone: String, role: USER_ROLES, auth0_user_id: String): PaginatedUsers!
  getNotificationAppUsersSettings: NotificationAppUsersSettings!
  getBmiById(id: ID!): Bmi!
  getMyBmiRecords(id: String, page: Int = 1, limit: Int = 10, order_by: String = "created_at", order: Oder = DESC, from_height: Float, to_height: Float, from_weight: Float, to_weight: Float, from_bmi_value: Float, to_bmi_value: Float, bmi_category: BMI_CATEGORY, from_time: Date, to_time: Date): PaginatedBmi!
  getMyBmiChart(
    type: BmiChartType

    """Format: YYYY-MM-DD"""
    from_date: String

    """Format: YYYY-MM-DD"""
    to_date: String
    timezone: String = "Asia/Ho_Chi_Minh"
  ): [BmiChartData!]!
}

enum Oder {
  ASC
  DESC
}

"""Type of BMI chart period"""
enum BmiChartType {
  SEVEN_DAYS
  THIRTY_DAYS
  NINETY_DAYS
}

type Mutation {
  addCustomer(addCustomerArgs: AddCustomerArgs!): Customers!
  updateCustomer(updateCustomerArgs: UpdateCustomerArgs!): Customers!
  deleteCustomer(id: String!): Boolean!
  createProduct(createProductArgs: CreateProductArgs!): Products!
  registerNewUser(registerNewUserArgs: RegisterNewUserArgs!): Users!
  login(loginArgs: LoginArgs!): LoginResult!
  updateUserInfo(updateUserInfoArgs: UpdateUserInfoArgs!): Users!
  updateNotificationAppUsersSettings(updateNotificationAppUsersSettingsArgs: UpdateNotificationAppUsersSettingsArgs!): NotificationAppUsersSettings!
  createBmiRecord(
    """Height in meters. Example: 1.75"""
    height: Float!

    """Weight in kilograms. Example: 70.5"""
    weight: Float!

    """Timezone. Example: Asia/Ho_Chi_Minh"""
    timezone: String! = "Asia/Ho_Chi_Minh"
  ): Bmi!
}

input AddCustomerArgs {
  first_name: String!
  last_name: String!
  email: String!
  address: String
  phone: String
  birthday: String
  gender: CustomerGenders
}

input UpdateCustomerArgs {
  """The ID that we will use to find record to MODIFY!"""
  id: ID!
  first_name: String
  last_name: String
  address: String
  phone: String
  birthday: String
  gender: CustomerGenders
}

input CreateProductArgs {
  name: String!
  price: Float!
  currency: ProductsCurrency!
  brand: String!
  stock: Int!
}

input RegisterNewUserArgs {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  address: String
  phone: String
  birthday: String
  picture: String
}

input LoginArgs {
  email: String!
  password: String!
}

input UpdateUserInfoArgs {
  """The ID of user"""
  id: ID!
  first_name: String
  last_name: String
  address: String
  phone: String
  birthday: String
  picture: String
  role: USER_ROLES
}

input UpdateNotificationAppUsersSettingsArgs {
  """User ID"""
  user_id: String!

  """User Email"""
  user_email: String

  """User Telegram ID"""
  user_telegram_id: String

  """User Phone"""
  user_phone: String

  """AppUsers Event Types"""
  event_types: [AppUsersNotificationSettingsEvents!]

  """In App Notification"""
  in_app_notification: Boolean

  """Email Notification"""
  email_notification: Boolean

  """Telegram Notification"""
  telegram_notification: Boolean
}